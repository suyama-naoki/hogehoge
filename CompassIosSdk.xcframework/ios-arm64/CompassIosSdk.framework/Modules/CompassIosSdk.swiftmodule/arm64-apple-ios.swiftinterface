// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CompassIosSdk
import AdSupport
@_exported import CompassIosSdk
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CompassInterstitialUIView : SwiftUI.UIViewRepresentable {
  public init(kvSet: CompassIosSdk.KvSet, spot: Swift.String)
  @_Concurrency.MainActor(unsafe) public func updateUIView(_: UIKit.UIView, context _: CompassIosSdk.CompassInterstitialUIView.Context)
  @_Concurrency.MainActor(unsafe) public func makeUIView(context _: CompassIosSdk.CompassInterstitialUIView.Context) -> UIKit.UIView
  public typealias Body = Swift.Never
  public typealias Coordinator = Swift.Void
  public typealias UIViewType = UIKit.UIView
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor(unsafe) public class CompassInterstitialView : UIKit.UIView, WebKit.WKNavigationDelegate, WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor(unsafe) public func load(spot: Swift.String, kvSet: CompassIosSdk.KvSet? = nil, errorHandler: ((Swift.String) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) @objc public func userContentController(_: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @objc deinit
}
@objc @objcMembers public class KvSet : ObjectiveC.NSObject {
  @objc public init(gender: Swift.String? = nil, birthday: Swift.String? = nil, age: Swift.String? = nil, postcode: Swift.String? = nil, email: Swift.String? = nil, hashedEmail: Swift.String? = nil)
  @objc deinit
}
